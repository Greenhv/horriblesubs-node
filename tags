!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/71525fe/
0	package.json	/^    "horriblesubs",$/;"	s	array:keywords
1	package.json	/^    "api",$/;"	s	array:keywords
2	package.json	/^    "wrapper",$/;"	s	array:keywords
3	package.json	/^    "non-official",$/;"	s	array:keywords
4	package.json	/^    "anime",$/;"	s	array:keywords
5	package.json	/^    "torrent"$/;"	s	array:keywords
BASE_URI	index.js	/^const BASE_URI = 'https:\/\/horriblesubs.info';$/;"	C
HorribleSubsAPI	README.md	/^# HorribleSubsAPI$/;"	c
allChapters	index.js	/^  const allChapters = responses$/;"	C
anime	index.js	/^  const anime = childList[1].text + childList[2].text;$/;"	C
author	package.json	/^  "author": "HerbertVidela @HerbertVidela",$/;"	s
bugs	package.json	/^  "bugs": {$/;"	o
dependencies	package.json	/^  "dependencies": {$/;"	o
description	package.json	/^  "description": "Non official Horriblesubs API wrapper",$/;"	s
downloadPages	index.js	/^const downloadPages = async (searchedAnime, pagesKeys) => {$/;"	C
emptyResponseMsg	index.js	/^const emptyResponseMsg = 'Nothing was found';$/;"	C
homepage	package.json	/^  "homepage": "https:\/\/github.com\/HerbertVidela\/HorribleSubsAPI#readme",$/;"	s
keywords	package.json	/^  "keywords": [$/;"	a
license	package.json	/^  "license": "MIT",$/;"	s
main	package.json	/^  "main": "index.js",$/;"	s
name	package.json	/^  "name": "horriblesubsapi",$/;"	s
node-html-parser	package.json	/^    "node-html-parser": "^1.1.17",$/;"	s	object:dependencies
pagesKeys	index.js	/^  const pagesKeys = combinePages ? [...Array.keys(page + 1)] : [page];$/;"	C
parse	index.js	/^const parse = require('node-html-parser').parse;$/;"	C
parseChapters	index.js	/^const parseChapters = childList => {$/;"	C
parseURI	index.js	/^const parseURI = attributes => attributes.match(\/\\"([^"]+)\\"\/)[1];$/;"	C
releaseDate	index.js	/^  const releaseDate = childList[0].text;$/;"	C
repository	package.json	/^  "repository": {$/;"	o
request	index.js	/^const request = require('request-promise-native');$/;"	C
request	package.json	/^    "request": "^2.88.0",$/;"	s	object:dependencies
request-promise-native	package.json	/^    "request-promise-native": "^1.0.8"$/;"	s	object:dependencies
resolutions	index.js	/^  const resolutions = childList[3].childNodes$/;"	C
responses	index.js	/^  const responses = await Promise.all(searchURIs.map(uri => request.get(uri)));$/;"	C
scripts	package.json	/^  "scripts": {$/;"	o
searchAnime	index.js	/^const searchAnime = ($/;"	C
searchURIs	index.js	/^  const searchURIs = pagesKeys.map($/;"	C
test	package.json	/^    "test": "echo \\"Error: no test specified\\" && exit 1"$/;"	s	object:scripts
type	package.json	/^    "type": "git",$/;"	s	object:repository
url	package.json	/^    "url": "git+https:\/\/github.com\/HerbertVidela\/HorribleSubsAPI.git"$/;"	s	object:repository
url	package.json	/^    "url": "https:\/\/github.com\/HerbertVidela\/HorribleSubsAPI\/issues"$/;"	s	object:bugs
version	package.json	/^  "version": "0.0.1",$/;"	s
